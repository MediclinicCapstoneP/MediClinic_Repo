import { AppointmentWithDetails } from '../types/appointments';

export const mockAppointments: AppointmentWithDetails[] = [
  {
    id: '1',
    patient_id: 'test-user-id',
    clinic_id: 'clinic-1',
    doctor_id: 'doctor-1',
    doctor_name: 'Dr. Sarah Johnson',
    doctor_specialty: 'Cardiology',
    appointment_date: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // 7 days from now
    appointment_time: '10:30:00',
    duration_minutes: 30,
    appointment_type: 'consultation',
    status: 'confirmed',
    priority: 'normal',
    room_number: '101',
    floor_number: '1',
    building: 'Main Building',
    patient_notes: 'Follow-up consultation for heart condition',
    doctor_notes: '',
    admin_notes: '',
    insurance_provider: 'Blue Cross',
    insurance_policy_number: 'BC123456',
    copay_amount: 25,
    total_cost: 150,
    reminder_sent: true,
    reminder_sent_at: new Date().toISOString(),
    confirmation_sent: true,
    confirmation_sent_at: new Date().toISOString(),
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    clinic: {
      id: 'clinic-1',
      clinic_name: 'Heart & Vascular Institute',
      address: '123 Medical Center Dr',
      city: 'Medical District',
      state: 'State'
    },
    patient: {
      id: 'test-user-id',
      first_name: 'John',
      last_name: 'Doe',
      email: 'john.doe@example.com',
      phone: '+1 234-567-8901'
    }
  },
  {
    id: '2',
    patient_id: 'test-user-id',
    clinic_id: 'clinic-2',
    doctor_id: 'doctor-2',
    doctor_name: 'Dr. Michael Chen',
    doctor_specialty: 'Dermatology',
    appointment_date: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // 14 days from now
    appointment_time: '14:00:00',
    duration_minutes: 45,
    appointment_type: 'routine_checkup',
    status: 'scheduled',
    priority: 'low',
    room_number: '205',
    floor_number: '2',
    building: 'Specialty Building',
    patient_notes: 'Annual skin check',
    doctor_notes: '',
    admin_notes: '',
    insurance_provider: 'Blue Cross',
    insurance_policy_number: 'BC123456',
    copay_amount: 20,
    total_cost: 120,
    reminder_sent: false,
    confirmation_sent: false,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    clinic: {
      id: 'clinic-2',
      clinic_name: 'Dermatology Associates',
      address: '456 Health Plaza',
      city: 'Medical District',
      state: 'State'
    },
    patient: {
      id: 'test-user-id',
      first_name: 'John',
      last_name: 'Doe',
      email: 'john.doe@example.com',
      phone: '+1 234-567-8901'
    }
  },
  {
    id: '3',
    patient_id: 'test-user-id',
    clinic_id: 'clinic-3',
    doctor_id: 'doctor-3',
    doctor_name: 'Dr. Emily Rodriguez',
    doctor_specialty: 'Orthopedics',
    appointment_date: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // 7 days ago
    appointment_time: '09:15:00',
    duration_minutes: 60,
    appointment_type: 'follow_up',
    status: 'completed',
    priority: 'high',
    room_number: '301',
    floor_number: '3',
    building: 'Surgery Center',
    patient_notes: 'Post-surgery follow-up for knee replacement',
    doctor_notes: 'Patient recovering well, continue physical therapy',
    admin_notes: '',
    insurance_provider: 'Blue Cross',
    insurance_policy_number: 'BC123456',
    copay_amount: 30,
    total_cost: 200,
    reminder_sent: true,
    reminder_sent_at: new Date(Date.now() - 8 * 24 * 60 * 60 * 1000).toISOString(),
    confirmation_sent: true,
    confirmation_sent_at: new Date(Date.now() - 8 * 24 * 60 * 60 * 1000).toISOString(),
    created_at: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),
    updated_at: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),
    clinic: {
      id: 'clinic-3',
      clinic_name: 'Orthopedic Specialists',
      address: '789 Surgery Center Blvd',
      city: 'Medical District',
      state: 'State'
    },
    patient: {
      id: 'test-user-id',
      first_name: 'John',
      last_name: 'Doe',
      email: 'john.doe@example.com',
      phone: '+1 234-567-8901'
    }
  },
  {
    id: '4',
    patient_id: 'test-user-id',
    clinic_id: 'clinic-4',
    doctor_id: 'doctor-4',
    doctor_name: 'Dr. David Kim',
    doctor_specialty: 'Emergency Medicine',
    appointment_date: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // 2 days ago
    appointment_time: '16:30:00',
    duration_minutes: 30,
    appointment_type: 'emergency',
    status: 'cancelled',
    priority: 'urgent',
    room_number: 'ER-1',
    floor_number: '1',
    building: 'Emergency Department',
    patient_notes: 'Chest pain and shortness of breath',
    doctor_notes: 'Patient cancelled due to improvement in symptoms',
    admin_notes: 'Cancelled by patient',
    insurance_provider: 'Blue Cross',
    insurance_policy_number: 'BC123456',
    copay_amount: 50,
    total_cost: 300,
    reminder_sent: true,
    reminder_sent_at: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),
    confirmation_sent: true,
    confirmation_sent_at: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),
    cancelled_at: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),
    cancelled_by: 'patient',
    cancellation_reason: 'Symptoms improved',
    created_at: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),
    updated_at: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),
    clinic: {
      id: 'clinic-4',
      clinic_name: 'Emergency Medical Center',
      address: '999 Emergency Way',
      city: 'Medical District',
      state: 'State'
    },
    patient: {
      id: 'test-user-id',
      first_name: 'John',
      last_name: 'Doe',
      email: 'john.doe@example.com',
      phone: '+1 234-567-8901'
    }
  }
]; 